{"version":3,"file":"index.js","sources":["../../electron/main/index.ts"],"sourcesContent":["import { app, BrowserWindow, shell, ipcMain, OpenDialogSyncOptions, dialog } from 'electron';\nimport { release } from 'node:os';\nimport fs from 'node:fs';\nimport { join } from 'node:path';\nimport { Copy } from './utils/FileOperation';\n\n// The built directory structure\n//\n// ├─┬ dist-electron\n// │ ├─┬ main\n// │ │ └── index.js    > Electron-Main\n// │ └─┬ preload\n// │   └── index.js    > Preload-Scripts\n// ├─┬ dist\n// │ └── index.html    > Electron-Renderer\n//\nprocess.env.DIST_ELECTRON = join(__dirname, '..');\nprocess.env.DIST = join(process.env.DIST_ELECTRON, '../dist');\nprocess.env.PUBLIC = process.env.VITE_DEV_SERVER_URL\n  ? join(process.env.DIST_ELECTRON, '../public')\n  : process.env.DIST;\n\n// Disable GPU Acceleration for Windows 7\nif (release().startsWith('6.1')) app.disableHardwareAcceleration();\n\n// Set application name for Windows 10+ notifications\nif (process.platform === 'win32') app.setAppUserModelId(app.getName());\n\nif (!app.requestSingleInstanceLock()) {\n  app.quit();\n  process.exit(0);\n}\n\n// Remove electron security warnings\n// This warning only shows in development mode\n// Read more on https://www.electronjs.org/docs/latest/tutorial/security\n// process.env['ELECTRON_DISABLE_SECURITY_WARNINGS'] = 'true'\n\nlet win: BrowserWindow | null = null;\n// Here, you can also use other preload\nconst preload = join(__dirname, '../preload/index.js');\nconst url = process.env.VITE_DEV_SERVER_URL as string;\nconst indexHtml = join(process.env.DIST, 'index.html');\n\nasync function createWindow() {\n  win = new BrowserWindow({\n    title: 'Main window',\n    icon: join(process.env.PUBLIC, 'favicon.ico'),\n    webPreferences: {\n      preload,\n      // Warning: Enable nodeIntegration and disable contextIsolation is not secure in production\n      // Consider using contextBridge.exposeInMainWorld\n      // Read more on https://www.electronjs.org/docs/latest/tutorial/context-isolation\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n    width: 1280,\n    height: 800,\n    frame: false,\n  });\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    // electron-vite-vue#298\n    win.loadURL(url);\n    // Open devTool if the app is not packaged\n    win.webContents.openDevTools();\n  } else {\n    win.loadFile(indexHtml);\n  }\n\n  // Test actively push message to the Electron-Renderer\n  win.webContents.on('did-finish-load', () => {\n    win?.webContents.send('main-process-message', new Date().toLocaleString());\n  });\n\n  // Make all links open with the browser, not with the application\n  win.webContents.on('will-navigate', (event, url) => {\n    event.preventDefault();\n    shell.openExternal(url);\n  });\n}\n\nasync function add_userData() {\n  //检查是否存在用户信息文件夹，不存在则创建并移动public文件夹内容\n  const userData_path = app.getPath('userData').replace(/\\s/g, '') + '/CacheFiles';\n  if (!fs.existsSync(userData_path)) {\n    fs.mkdirSync(userData_path);\n    // 复制文件列表\n    const folder_list = ['divisions', 'images', 'lawfiles', 'presettext', 'offlinecasefiles'];\n    folder_list.forEach((foldername: string) => {\n      Copy(__dirname.replace('/main', '/renderer/') + foldername, userData_path + '/' + foldername);\n    });\n  }\n}\n\napp.whenReady().then(createWindow);\n\nipcMain.on('Min', _e => win?.minimize());\nipcMain.on('Max', _e => {\n  if (win?.isMaximized()) {\n    win.unmaximize();\n  } else {\n    win?.maximize();\n  }\n});\nipcMain.on('Close', _e => app.quit());\n\nipcMain.handle('Select_FileOrFolder', async (_event, options: OpenDialogSyncOptions) => {\n  const res = dialog.showOpenDialogSync(options);\n  if (res) {\n    return res[0];\n  }\n});\n\nipcMain.handleOnce('Get_Path', (_event, path_list: string[]): string[] => {\n  type pathtype = 'userData' | 'documents' | 'downloads';\n  return path_list.map(path => {\n    return app.getPath(<pathtype>path);\n  });\n});\n\napp.on('window-all-closed', () => {\n  win = null;\n  if (process.platform !== 'darwin') app.quit();\n});\n\napp.on('second-instance', () => {\n  if (win) {\n    // Focus on the main window if the user tried to open another\n    if (win.isMinimized()) win.restore();\n    win.focus();\n  }\n});\n\napp.on('activate', () => {\n  const allWindows = BrowserWindow.getAllWindows();\n  if (allWindows.length) {\n    allWindows[0].focus();\n  } else {\n    createWindow();\n  }\n});\n\n// New window example arg: new windows url\nipcMain.handle('open-win', (_, arg) => {\n  const childWindow = new BrowserWindow({\n    webPreferences: {\n      preload,\n      nodeIntegration: true,\n      contextIsolation: false,\n    },\n  })\n\n  if (process.env.VITE_DEV_SERVER_URL) {\n    childWindow.loadURL(`${url}#${arg}`)\n  } else {\n    childWindow.loadFile(indexHtml, { hash: arg })\n  }\n})"],"names":["join","release","app","BrowserWindow","url","shell","ipcMain","dialog"],"mappings":"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"}